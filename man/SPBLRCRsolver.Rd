% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{SPBLRCRsolver}
\alias{SPBLRCRsolver}
\title{Semi-Parametric Bayesian Logistic Regression Capture-Recapture}
\usage{
SPBLRCRsolver(
  y,
  x,
  priorb,
  priorB,
  priorMU0,
  priorlambda0,
  priorkappa0 = 1,
  priornu0 = 1,
  aalpha = 0.25,
  balpha = 0.25,
  Kstar = 10L,
  samples = 1000L
)
}
\arguments{
\item{y}{a nxJ matrix of capture patterns.}

\item{x}{a nxH matrix of covariates.}

\item{priorb}{a (H+1) vector of prior means for the coefficients}

\item{priorB}{a (H+1)x(H+1) covariance matrix for the coefficients}

\item{priorMU0}{a Hx1 vector of prior covariate means. Default=(0,...,0).}

\item{priorlambda0}{a HxH prior covariance matrix for the covariates}

\item{priorkappa0}{a positve real value}

\item{priornu0}{a positive real value}

\item{aalpha}{a positive real value}

\item{balpha}{a positive real value}

\item{Kstar}{an integer of maximum number of mixture classes}

\item{samples}{the number of MCMC samples to draw from the posterior}
}
\value{
List with components "N" and "beta". 
\describe{
\item{"N"}{is a single estimate of the population size.}
\item{"beta"}{is a matrix of beta estimates.}
}
}
\description{
This function computes MCMC samples of N using the the Bayesian Logistic
Regression Capture-Recapture model.
}
\examples{
#Generate the Data
mybeta = matrix(c(-2,-1,1,
                  -2,1,-1,
                  -2,-1,1,
                  -2,1,-1),nrow=4,byrow=TRUE)
                  
mynormprobs=c(0.3,0.4,0.3)

mynormmeans=matrix(c(2,2,
                     0,0,
                     -2,-2),ncol=2,byrow=TRUE)
                     
mynormsigma=matrix(c(.5,.45,.45,.5,
                      1,0,0,1,
                      .5,-.35,-.35,.5),nrow=3,byrow=TRUE)

mydata = multdatasimulator(2000,mybeta,mynormprobs,mynormmeans,mynormsigma,
                           missing="yes")
                           
#Run the Algorithm
mypriorb=rep(0,3) #prior on intercept and both beta means set to 0
mypriorB=diag(3) #identity matrix, size 3     

condBLRCRsolver(as.matrix(mydata[,1:4]),
                as.matrix(mydata[,5:6]),mypriorb,mypriorB)                      

}
