% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{condBLRCRsolver}
\alias{condBLRCRsolver}
\title{Bayesian Logistic Regression Capture-Recapture using Conditional Likelihood}
\usage{
condBLRCRsolver(
  y,
  x,
  priorb,
  priorB,
  gradparam = 0.01,
  tol = 1e-06,
  maxiter = 1000L
)
}
\arguments{
\item{y}{a nxj matrix of capture patterns.}

\item{x}{a nxh matrix of covariates.}

\item{priorb}{a (h+1) vector of prior means for the coefficients}

\item{priorB}{a (h+1)x(h+1) covariance matrix for the coefficients}
}
\value{
List with components "N" and "beta". 
\describe{
\item{"N"}{is a single estimate of the population size.}
\item{"beta"}{is a matrix of beta estimates.}
}
}
\description{
This function computes the Bayesian Logistic Regression Capture-Recapture estimate for N
using the conditional maximum likelihood (instead of the full likelihood).
}
\examples{
#Generate the Data
mybeta = matrix(c(-2,-1,1,
                  -2,1,-1,
                  -2,-1,1,
                  -2,1,-1),nrow=4,byrow=TRUE)
                  
mynormprobs=c(0.3,0.4,0.3)

mynormmeans=matrix(c(2,2,
                     0,0,
                     -2,-2),ncol=2,byrow=TRUE)
                     
mynormsigma=matrix(c(.5,.45,.45,.5,
                      1,0,0,1,
                      .5,-.35,-.35,.5),nrow=3,byrow=TRUE)

mydata = multdatasimulator(2000,mybeta,mynormprobs,mynormmeans,mynormsigma,
                           missing="yes")
                           
#Run the Algorithm
mypriorb=rep(0,3) #prior on intercept and both beta means set to 0
mypriorB=diag(3) #identity matrix, size 3     

condBLRCRsolver(as.matrix(mydata[,1:4]),
                as.matrix(mydata[,5:6]),mypriorb,mypriorB)                      

}
